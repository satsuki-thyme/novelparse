function novelparse(e,r,u,F,t){async function n(e){return"unprocessed"===o?e.split(/\r?\n|\r(?!\n)/):"delete"===o?e.replace(/\/\*[\s\S]*\*\/(\r?\n|\r(?!\n))/g,"").split(/\r?\n|\r(?!\n)/).filter(e=>!/^#+ |^[ \t]*[\-+*] |^[ \t]*\d+\. |^\/\//.test(e)):void 0}async function p(e){async function r(e){return new Promise(r=>{function u($){function c(F){n&&!p?F&&/^.+$/.test(e[t+1])?(e[t]=`${e[t].replace(/^[　 ]*/,"")}`,t++,u()):F&&/^$/.test(e[t+1])?(e[t]=`${e[t].replace(/^[　 ]*/,"")}</p>`,n=!1,t++,u()):F?(t++,u()):(e[t]=`${e[t].replace(/^[　 ]*/,"")}</p>`,r(e)):n||p?!n&&p?(F&&""!==a&&!g.test(e[t])&&i.test(e[t])&&(e[t]=`${e[t].replace(/^[　 ]*/,"")}</p>`,p=!1,t++,u()),!F||""===a||g.test(e[t])||i.test(e[t])||(e[t]=`${e[t].replace(/^[　 ]*/,"")}`,t++,u(a)),F||(e[t]=`${e[t].replace(/^[　 ]*/,"")}</p>`,r(e))):(console.log("想定外の入力がありました"),t++,u()):F&&""===a&&/^(?<!\\)[　 ].*$/.test(e[t])&&/^(?<!\\)[　 ].*$/.test(e[t+1])?(e[t]=`${l}<p>${e[t]}`,n=!0,t++,u(a)):F&&""===a&&/^(?<!\\)[　 ].*$/.test(e[t])&&!/^(?<!\\)[　 ].*$/.test(e[t+1])?(e[t]=`${l}<p>${e[t]}</p>`,t++,u()):F&&""===a&&/^$/.test(e[t])?(e[t]=`${l}<p><br></p>`,t++,u()):F&&""===a&&/^([^　 ]|(?<=\\)[　 ]).*$/.test(e[t])?(e[t]=`${l}<p>${e[t].replace(/^\\/,"")}</p>`,t++,u()):F&&""!==a&&!/^$/.test(e[t])&&e[t].search(g)<e[t].search(i)?(e[t]=`${l}<p>${e[t]}</p>`,t++,u()):F&&""!==a&&!/^$/.test(e[t])&&e[t].search(g)>=e[t].search(i)?(e[t]=`${l}<p>${e[t]}`,p=!0,t++,u(a)):F?(console.log("想定外の入力がありました"),t++,u()):(e[t]=`<p>${e[t].replace(/^[　 ]*/,"").replace(/^$/,"<br>")}</p>`,r(e))}let l=0!==t?D:"",a=void 0!==$?$:F.test(e[t])?e[t].match(F)[0]:"",o=""!==a?s.filter(e=>e[0]===a)[0][1]:"",g=new RegExp(`^${a}`),i=new RegExp(`${o}$`);t!==e.length-1?c(!0):c(!1)}let t=0,n=!1,p=!1;u()})}let u=s.map(e=>e[0]).join(""),F=new RegExp(`^(?<![　 ])[${u}]`);return"unprocessed"===l?e.map(e=>e.replace(/^(.+)$/,"<p>$1</p>").replace(/^$/,"<p><br></p>")):"few"===l?r(e):"unprocessed"!==l&&"few"!==l?e:void 0}function $(e){return e=e.join(""),"parse"===a?e.replace(/[|｜](.+?)《(.+?)》/g,"<ruby>$1<rt>$2</rt></ruby>").replace(/([々〇〻\u3400-\u9FFF\uF900-\uFAFF\uD840-\uD87F\uDC00-\uDFFF]+)《(.+?)》/g,"<ruby>$1<rt>$2</rt></ruby>").replace(/([々〇〻\u3400-\u9FFF\uF900-\uFAFF\uD840-\uD87F\uDC00-\uDFFF]+)\(([\u3040-\u309F\u30A0-\u30FF]+?)\)/g,"<ruby>$1<rt>$2</rt></ruby>").replace(/([々〇〻\u3400-\u9FFF\uF900-\uFAFF\uD840-\uD87F\uDC00-\uDFFF]+)（([\u3040-\u309F\u30A0-\u30FF]+?)）/g,"<ruby>$1<rt>$2</rt></ruby>").replace(/[|｜]([《\(（])(.+?)([》\)）])/g,"$1$2$3").replace(/#(.+?)__(.+?)__#/g,"<ruby>$1<rt>$2</rt></ruby>"):"delete"===a?e.replace(/[|｜](.+?)《(.+?)》/g,"$1").replace(/([々〇〻\u3400-\u9FFF\uF900-\uFAFF\uD840-\uD87F\uDC00-\uDFFF]+)《(.+?)》/g,"$1").replace(/([々〇〻\u3400-\u9FFF\uF900-\uFAFF\uD840-\uD87F\uDC00-\uDFFF]+)\(([\u3040-\u309F\u30A0-\u30FF]+?)\)/g,"$1").replace(/([々〇〻\u3400-\u9FFF\uF900-\uFAFF\uD840-\uD87F\uDC00-\uDFFF]+)（([\u3040-\u309F\u30A0-\u30FF]+?)）/g,"$1").replace(/[|｜]([《\(（])(.+?)([》\)）])/g,"$1$2$3").replace(/#(.+?)__(.+?)__#/g,"$1"):"raw"===a?e:void 0}let c=void 0===e?"":e,l=void 0===r?"unprocessed":r,a=void 0===u?"parse":u,s=[["「","」"],["『","』"],["（","）"]],o=void 0===t?"delete":t,g={n:(c.match(/(?<!\r)\n/g)||[]).length,r:(c.match(/\r(?!\n)/g)||[]).length,rn:(c.match(/\r\n/g)||[]).length},D=g.n>=g.r?g.n>=g.rn?"\n":"\r\n":g.r<=g.rn?"\r\n":"\r";return n(c).then(e=>p(e)).then(e=>$(e))}